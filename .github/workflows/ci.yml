name: rustls

permissions:
  contents: read

on:
  push:
  pull_request:
  merge_group:
  schedule:
    - cron: '0 21 * * *'

jobs:
  build:
    name: Build + test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # test a bunch of toolchains on ubuntu
        rust:
          - stable
          - beta
          - nightly
        os: [ubuntu-20.04]
        # but only stable on macos/windows (slower platforms)
        include:
          - os: macos-latest
            rust: stable
          - os: windows-latest
            rust: stable
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Install ${{ matrix.rust }} toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: cargo test (debug; default features)
        run: cargo test
        env:
          RUST_BACKTRACE: 1

      - name: cargo test (debug; all features)
        run: cargo test --all-features
        env:
          RUST_BACKTRACE: 1

      - name: cargo test (debug; no default features; no run)
        run: cargo test --no-default-features
        env:
          RUST_BACKTRACE: 1

  wasm_build:
    name: Build + test wasm32
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        webdriver:
         - firefox
         - chrome

    steps:
      - run: sudo apt-get update -y

      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: Add wasm target
        run: rustup target add wasm32-unknown-unknown

      - uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: 'v0.12.1'

      - name: Run wasm-pack tests (default features)
        run: wasm-pack test --headless --${{ matrix.webdriver }} -- --lib
        env:
          RUST_BACKTRACE: 1

      - name: Run wasm-pack tests (all features)
        run: wasm-pack test --headless --${{ matrix.webdriver }} -- --lib --all-features
        env:
          RUST_BACKTRACE: 1

      - name: Run wasm-pack tests (no default features)
        run: wasm-pack test --headless --${{ matrix.webdriver }} -- --lib --no-default-features
        env:
          RUST_BACKTRACE: 1

  msrv:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Install MSRV toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: "1.60"

      - run: cargo check --lib --all-features

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Check formatting
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - run: cargo clippy --all-features -- --deny warnings

  semver:
    name: Check semver compatibility
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Check semver
        uses: obi1kenobi/cargo-semver-checks-action@v2
